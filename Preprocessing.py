import os
import pandas as pd

# Specify the folder containing CSV files
folder_path = '/Users/'

# Specify the output folder for processed CSV files
# output_folder_path = '/Users/'


# Function to clean and process a DataFrame
def process_dataframe(df):
    # We want to keep schools that keep track of SAT or ACT scores
    # These are mor eliekly to be 4 year schools
    columns_to_check = df.columns
    selected_columns = [col for col in columns_to_check if col.startswith('SAT') or col.startswith('ACT')]
    new_dataframe = df[df[selected_columns].notna().any(axis=1)]
    # Remove non-main colleges as well as inactives colleges
    new_dataframe = new_dataframe[new_dataframe['MAIN'] == 1]
    new_dataframe = new_dataframe[new_dataframe['CURROPER'] != 0]
    result_data = new_dataframe.drop('CURROPER', axis=1)

    columns = [
    "INSTNM",
    "CITY",
    "STABBR",
    "ZIP",
    "ACCREDAGENCY",
    "INSTURL",
    "NPCURL",
    "SCH_DEG",
    "HCM2",
    "NUMBRANCH",
    "PREDDEG",
    "HIGHDEG",
    "REGION",
    "LOCALE",
    "LOCALE2",
    "LATITUDE",
    "LONGITUDE",
    "CCBASIC",
    "CCUGPROF",
    "CCSIZSET",
    "ADM_RATE",
    "ADM_RATE_ALL",
    "SATVR25",
    "SATVR75",
    "SATMT25",
    "SATMT75",
    "SATWR25",
    "SATWR75",
    "SATVRMID",
    "SATMTMID",
    "SATWRMID",
    "ACTCM25",
    "ACTCM75",
    "ACTEN25",
    "ACTEN75",
    "ACTMT25",
    "ACTMT75",
    "ACTWR25",
    "ACTWR75",
    "ACTCMMID",
    "ACTENMID",
    "ACTMTMID",
    "ACTWRMID",
    "SAT_AVG",
    "SAT_AVG_ALL",
    "UGDS",
    "UG",
    "UGDS_WHITE",
    "UGDS_BLACK",
    "UGDS_HISP",
    "UGDS_ASIAN",
    "UGDS_AIAN",
    "UGDS_NHPI",
    "UGDS_2MOR",
    "UGDS_NRA",
    "UGDS_UNKN",
    "UGDS_WHITENH",
    "UGDS_BLACKNH",
    "UGDS_API",
    "UGDS_AIANOLD",
    "UGDS_HISPOLD",
    "UG_NRA",
    "UG_UNKN",
    "UG_WHITENH",
    "UG_BLACKNH",
    "UG_API",
    "UG_AIANOLD",
    "UG_HISPOLD",
    "NPT4_PUB",
    "NPT4_PRIV",
    "NPT4_PROG",
    "NPT4_OTHER",
    "NPT41_PUB",
    "NPT42_PUB",
    "NPT43_PUB",
    "NPT44_PUB",
    "NPT45_PUB",
    "NPT41_PRIV",
    "NPT42_PRIV",
    "NPT43_PRIV",
    "NPT44_PRIV",
    "NPT45_PRIV",
    "NPT41_PROG",
    "NPT42_PROG",
    "NPT43_PROG",
    "NPT44_PROG",
    "NPT45_PROG",
    "NPT41_OTHER",
    "NPT42_OTHER",
    "NPT43_OTHER",
    "NPT44_OTHER",
    "NPT45_OTHER",
    "NPT4_048_PUB",
    "NPT4_048_PRIV",
    "NPT4_048_PROG",
    "NPT4_048_OTHER",
    "NPT4_3075_PUB",
    "NPT4_3075_PRIV",
    "NPT4_75UP_PUB",
    "NPT4_75UP_PRIV",
    "NPT4_3075_PROG",
    "NPT4_3075_OTHER",
    "NPT4_75UP_PROG",
    "NPT4_75UP_OTHER",
    "COSTT4_A",
    "COSTT4_P",
    "TUITIONFEE_IN",
    "TUITIONFEE_OUT",
    "TUITIONFEE_PROG",
    "TUITFTE",
    "INEXPFTE",
    "AVGFACSAL",
    "PFTFAC",
    "PCTPELL",
    "C150_4",
    "PFTFTUG1_EF",
    "D150_4",
    "D150_L4",
    "D150_4_POOLED",
    "D150_L4_POOLED",
    "C150_4_WHITE",
    "C150_4_BLACK",
    "C150_4_HISP",
    "C150_4_ASIAN",
    "C150_4_AIAN",
    "C150_4_NHPI",
    "C150_4_2MOR",
    "C150_4_NRA",
    "C150_4_UNKN",
    "C150_4_WHITENH",
    "C150_4_BLACKNH",
    "C150_4_API",
    "C150_4_AIANOLD",
    "C150_4_HISPOLD",
    "C150_L4_WHITE",
    "C150_L4_BLACK",
    "C150_L4_HISP",
    "C150_L4_ASIAN",
    "C150_L4_AIAN",
    "C150_L4_NHPI",
    "C150_L4_2MOR",
    "C150_L4_NRA",
    "C150_L4_UNKN",
    "C150_L4_WHITENH",
    "C150_L4_BLACKNH",
    "C150_L4_API",
    "C150_L4_AIANOLD",
    "C150_L4_HISPOLD",
    "C200_4",
    "RET_FT4",
    "RET_FTL4",
    "RET_PT4",
    "RET_PTL4",
    "C200_4_POOLED",
    "C200_L4_POOLED",
    "POOLYRS200",
    "D200_4_POOLED",
    "D200_L4_POOLED",
    "PCTFLOAN",
    "UG25ABV",
    "CDR2",
    "CDR3",
    "DEATH_YR2_RT",
    "COMP_ORIG_YR2_RT",
    "COMP_4YR_TRANS_YR2_RT",
    "COMP_2YR_TRANS_YR2_RT",
    "WDRAW_ORIG_YR2_RT",
    "WDRAW_4YR_TRANS_YR2_RT",
    "WDRAW_2YR_TRANS_YR2_RT",
    "ENRL_ORIG_YR2_RT",
    "ENRL_4YR_TRANS_YR2_RT",
    "ENRL_2YR_TRANS_YR2_RT",
    "FIRSTGEN_COMP_ORIG_YR4_RT",
    "FIRSTGEN_COMP_4YR_TRANS_YR4_RT",
    "COMPL_RPY_1YR_RT",
    "NONCOM_RPY_1YR_RT",
    "LO_INC_RPY_1YR_RT",
    "MD_INC_RPY_1YR_RT",
    "HI_INC_RPY_1YR_RT",
    "DEP_RPY_1YR_RT",
    "IND_RPY_1YR_RT",
    "PELL_RPY_1YR_RT",
    "NOPELL_RPY_1YR_RT",
    "FEMALE_RPY_1YR_RT",
    "MALE_RPY_1YR_RT",
    "FIRSTGEN_RPY_1YR_RT",
    "NOTFIRSTGEN_RPY_1YR_RT",
    "COMPL_RPY_3YR_RT",
    "NONCOM_RPY_3YR_RT",
    "LO_INC_RPY_3YR_RT",
    "MD_INC_RPY_3YR_RT",
    "HI_INC_RPY_3YR_RT",
    "DEP_RPY_3YR_RT",
    "IND_RPY_3YR_RT",
    "PELL_RPY_3YR_RT",
    "NOPELL_RPY_3YR_RT",
    "FEMALE_RPY_3YR_RT",
    "MALE_RPY_3YR_RT",
    "FIRSTGEN_RPY_3YR_RT",
    "NOTFIRSTGEN_RPY_3YR_RT",
    "RPY_5YR_RT",
    "COMPL_RPY_5YR_RT",
    "NONCOM_RPY_5YR_RT",
    "LO_INC_RPY_5YR_RT",
    "MD_INC_RPY_5YR_RT",
    "HI_INC_RPY_5YR_RT",
    "DEP_RPY_5YR_RT",
    "IND_RPY_5YR_RT",
    "PELL_RPY_5YR_RT",
    "NOPELL_RPY_5YR_RT",
    "FEMALE_RPY_5YR_RT",
    "MALE_RPY_5YR_RT",
    "FIRSTGEN_RPY_5YR_RT",
    "NOTFIRSTGEN_RPY_5YR_RT",
    "RPY_7YR_RT",
    "COMPL_RPY_7YR_RT",
    "NONCOM_RPY_7YR_RT",
    "LO_INC_RPY_7YR_RT",
    "MD_INC_RPY_7YR_RT",
    "HI_INC_RPY_7YR_RT",
    "DEP_RPY_7YR_RT",
    "IND_RPY_7YR_RT",
    "PELL_RPY_7YR_RT",
    "NOPELL_RPY_7YR_RT",
    "FEMALE_RPY_7YR_RT",
    "MALE_RPY_7YR_RT",
    "FIRSTGEN_RPY_7YR_RT",
    "NOTFIRSTGEN_RPY_7YR_RT",
    "INC_PCT_LO",
    "DEP_STAT_PCT_IND",
    "IND_INC_PCT_LO",
    "DEP_INC_PCT_LO",
    "PAR_ED_PCT_1STGEN",
    "INC_PCT_M1",
    "INC_PCT_M2",
    "INC_PCT_H1",
    "INC_PCT_H2",
    "DEP_INC_PCT_M1",
    "DEP_INC_PCT_M2",
    "DEP_INC_PCT_H1",
    "DEP_INC_PCT_H2",
    "IND_INC_PCT_M1",
    "IND_INC_PCT_M2",
    "IND_INC_PCT_H1",
    "IND_INC_PCT_H2",
    "PAR_ED_PCT_MS",
    "PAR_ED_PCT_HS",
    "PAR_ED_PCT_PS",
    "DEP_INC_AVG",
    "IND_INC_AVG",
    "OVERALL_YR2_N",
    "LO_INC_YR2_N",
    "MD_INC_YR2_N",
    "HI_INC_YR2_N",
    "DEP_YR2_N",
    "IND_YR2_N",
    "FEMALE_YR2_N",
    "MALE_YR2_N",
    "PELL_YR2_N",
    "NOPELL_YR2_N",
    "LOAN_YR2_N",
    "NOLOAN_YR2_N",
    "FIRSTGEN_YR2_N",
    "NOT1STGEN_YR2_N",
    "OVERALL_YR3_N",
    "LO_INC_YR3_N",
    "MD_INC_YR3_N",
    "HI_INC_YR3_N",
    "DEP_YR3_N",
    "IND_YR3_N",
    "FEMALE_YR3_N",
    "MALE_YR3_N",
    "PELL_YR3_N",
    "NOPELL_YR3_N",
    "LOAN_YR3_N",
    "NOLOAN_YR3_N",
    "FIRSTGEN_YR3_N",
    "NOT1STGEN_YR3_N",
    "OVERALL_YR4_N",
    "LO_INC_YR4_N",
    "MD_INC_YR4_N",
    "HI_INC_YR4_N",
    "DEP_YR4_N",
    "IND_YR4_N",
    "FEMALE_YR4_N",
    "MALE_YR4_N",
    "PELL_YR4_N",
    "NOPELL_YR4_N",
    "LOAN_YR4_N",
    "NOLOAN_YR4_N",
    "FIRSTGEN_YR4_N",
    "NOT1STGEN_YR4_N",
    "DEBT_MDN",
    "GRAD_DEBT_MDN",
    "WDRAW_DEBT_MDN",
    "LO_INC_DEBT_MDN",
    "MD_INC_DEBT_MDN",
    "HI_INC_DEBT_MDN",
    "DEP_DEBT_MDN",
    "IND_DEBT_MDN",
    "PELL_DEBT_MDN",
    "NOPELL_DEBT_MDN",
    "FEMALE_DEBT_MDN",
    "MALE_DEBT_MDN",
    "FIRSTGEN_DEBT_MDN",
    "NOTFIRSTGEN_DEBT_MDN",
    "DEBT_N",
    "GRAD_DEBT_N",
    "WDRAW_DEBT_N",
    "LO_INC_DEBT_N",
    "MD_INC_DEBT_N",
    "HI_INC_DEBT_N",
    "DEP_DEBT_N",
    "IND_DEBT_N",
    "PELL_DEBT_N",
    "NOPELL_DEBT_N",
    "FEMALE_DEBT_N",
    "MALE_DEBT_N",
    "FIRSTGEN_DEBT_N",
    "NOTFIRSTGEN_DEBT_N",
    "GRAD_DEBT_MDN10YR",
    "CUML_DEBT_N",
    "CUML_DEBT_P90",
    "CUML_DEBT_P75",
    "CUML_DEBT_P25",
    "CUML_DEBT_P10",
    "LOAN_EVER",
    "PELL_EVER",
    "AGE_ENTRY",
    "AGE_ENTRY_SQ",
    "AGEGE24",
    "FEMALE",
    "MARRIED",
    "DEPENDENT",
    "VETERAN",
    "FIRST_GEN",
    "FAMINC",
    "MD_FAMINC",
    "FAMINC_IND",
    "LNFAMINC",
    "LNFAMINC_IND",
    "PCT_WHITE",
    "PCT_BLACK",
    "PCT_ASIAN",
    "PCT_HISPANIC",
    "PCT_BA",
    "PCT_GRAD_PROF",
    "PCT_BORN_US",
    "MEDIAN_HH_INC",
    "POVERTY_RATE",
    "UNEMP_RATE",
    "LN_MEDIAN_HH_INC",
    "FSEND_COUNT",
    "FSEND_1",
    "FSEND_2",
    "FSEND_3",
    "FSEND_4",
    "FSEND_5",
    "COUNT_NWNE_P10",
    "COUNT_WNE_P10",
    "MN_EARN_WNE_P10",
    "MD_EARN_WNE_P10",
    "PCT10_EARN_WNE_P10",
    "PCT25_EARN_WNE_P10",
    "PCT75_EARN_WNE_P10",
    "PCT90_EARN_WNE_P10",
    "SD_EARN_WNE_P10",
    "COUNT_WNE_INC1_P10",
    "COUNT_WNE_INC2_P10",
    "COUNT_WNE_INC3_P10",
    "MN_EARN_WNE_INC1_P10",
    "MN_EARN_WNE_INC2_P10",
    "MN_EARN_WNE_INC3_P10",
    "COUNT_NWNE_P6",
    "COUNT_WNE_P6",
    "MN_EARN_WNE_P6",
    "MD_EARN_WNE_P6",
    "PCT10_EARN_WNE_P6",
    "PCT25_EARN_WNE_P6",
    "PCT75_EARN_WNE_P6",
    "PCT90_EARN_WNE_P6",
    "SD_EARN_WNE_P6",
    "COUNT_WNE_INC1_P6",
    "COUNT_WNE_INC2_P6",
    "COUNT_WNE_INC3_P6",
    "COUNT_WNE_INDEP0_INC1_P6",
    "COUNT_WNE_INDEP0_P6",
    "COUNT_WNE_INDEP1_P6",
    "COUNT_WNE_MALE0_P6",
    "COUNT_WNE_MALE1_P6",
    "GT_25K_P6",
    "GT_28K_P6",
    "MN_EARN_WNE_INC1_P6",
    "MN_EARN_WNE_INC2_P6",
    "MN_EARN_WNE_INC3_P6",
    "COUNT_NWNE_P8",
    "COUNT_WNE_P8",
    "MN_EARN_WNE_P8",
    "MD_EARN_WNE_P8",
    "COUNT_NWNE_P9",
    "COUNT_WNE_P9",
    "MN_EARN_WNE_P9",
    "UGDS_MEN",
    "UGDS_WOMEN",
    "D_PCTPELL_PCTFLOAN",
    "GRADS",
    "D150_4_WHITE",
    "D150_4_BLACK",
    "D150_4_HISP",
    "D150_4_ASIAN",
    "D150_4_AIAN",
    "D150_4_NHPI",
    "D150_4_2MOR",
    "D150_4_NRA",
    "D150_4_UNKN",
    "D150_L4_WHITE",
    "D150_L4_BLACK",
    "D150_L4_HISP",
    "D150_L4_ASIAN",
    "D150_L4_AIAN",
    "D150_L4_NHPI",
    "D150_L4_2MOR",
    "D150_L4_NRA",
    "D150_L4_UNKN",
    "PRGMOFR",
    "CIPTFBS1",
    "CIPTFBSANNUAL1",
    "FTFTPCTPELL",
    "FTFTPCTFLOAN",
    "DBRR5_FED_UG_RT",
    "DBRR10_FED_UG_RT",
    "DBRR10_FED_GR_RT",
    "DBRR5_PP_UG_RT",
    "DBRR10_PP_UG_RT",
    "BOOKSUPPLY",
    "ROOMBOARD_ON",
    "OTHEREXPENSE_ON",
    "ROOMBOARD_OFF",
    "OTHEREXPENSE_OFF",
    "OTHEREXPENSE_FAM",
    "ENDOWBEGIN",
    "ENDOWEND",
    "ADMCON7",
    "MDCOMP_PD",
    "MDCOST_PD",
    "MDEARN_PD",
    "MDCOMP_ALL",
    "MDCOST_ALL",
    "MDEARN_ALL",
    "COUNT_NWNE_1YR",
    "COUNT_WNE_1YR",
    "MD_EARN_WNE_INC1_P6",
    "MD_EARN_WNE_INC2_P6",
    "MD_EARN_WNE_INC3_P6",
    "MD_EARN_WNE_INC1_P10",
    "MD_EARN_WNE_INC2_P10",
    "MD_EARN_WNE_INC3_P10",
    "MD_EARN_WNE_INDEP1_P10",
    "IRPS_2MOR",
    "IRPS_AIAN",
    "IRPS_ASIAN",
    "IRPS_BLACK",
    "IRPS_HISP",
    "IRPS_NHPI",
    "IRPS_NRA",
    "IRPS_UNKN",
    "IRPS_WHITE",
    "IRPS_WOMEN",
    "IRPS_MEN",
    "MD_EARN_WNE_1YR",
    "COUNT_NWNE_4YR",
    "COUNT_WNE_4YR",
    "MD_EARN_WNE_4YR"
    ]
    # Ensuring duplicate column names are dropped
    columns = list(set(columns))
    filtered_df = result_data[columns]
    return filtered_df

# Initialize an empty list to store processed DataFrames
processed_dfs = []

# Loop through each additional CSV file
for csv_file in os.listdir(folder_path):
    if csv_file.endswith('.csv'):
        file_path = os.path.join(folder_path, csv_file)

        additional_df = pd.read_csv(file_path)
        processed_additional_df = process_dataframe(additional_df)

        # Extract the year from the CSV file name
        year = int(csv_file.split('_')[0].replace('MERGED', ''))

        # Add a new column 'Year' to the processed DataFrame
        processed_additional_df['Year'] = year

        # Append the processed DataFrame to the list
        processed_dfs.append(processed_additional_df)

# Merge all processed DataFrames into a single DataFrame
merged_df = pd.concat(processed_dfs, ignore_index=True)
#output_excel_path = '/Users/'
#merged_df.to_excel(output_excel_path, index=False)
#print(f'Merged file saved as Excel: {output_excel_path}')

################# Cleaning Merged dataframe ##################
# Removing rows if all the rows have the same value
final_df = merged_df.loc[:, merged_df.nunique() > 1]
final_df

threshold = 0.8
thresh_value = int(threshold * len(final_df))
df = final_df.dropna(axis=1, thresh=thresh_value)
# Adjust Path
output_excel_path = '/Users/'
df.to_excel(output_excel_path, index=False)
